name: CI/CD > CI
on:
  workflow_call:
    inputs:
      project-name:
        required: true
        type: string
    secrets:
      gha-token:
        description: GitHub Actions access token
        required: true
    outputs:
      octo-environment:
        description: Octopus environment to deploy to
        value: ${{ jobs.ci.outputs.environment }}      
      tag:
        value: ${{ jobs.ci.outputs.new_tag }}
      version:
        value: ${{ jobs.ci.outputs.new_version }}
  
jobs:
  ci:
    name: Build and Test
    runs-on: ubuntu-latest
    outputs:
      is-deployable: ${{ steps.environment.outputs.is-deployable }}
      environment: ${{ steps.environment.outputs.environment }}
      new_tag: ${{ steps.tag_version.outputs.new_tag }}
      new_version: ${{ steps.tag_version.outputs.new_version }}    
    steps:
      - name: Check-out repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Restore NuGet packages dependencies
        run: |
          dotnet restore src/MySample.csproj

      - name: Retrieve Octopus environment
        id: environment
        run: |
          import os
          import json
          import uuid

          def set_output(name, value):
            with open(os.environ['GITHUB_OUTPUT'], 'a') as fh:
              print(f'{name}={value}', file=fh)
          
          envs = json.loads('${{ vars.OCTOPUS_ENVIRONMENT_BY_GIT_BRANCH }}')
          
          set_output('is-deployable','${{ github.ref_name }}' in envs)

          if '${{ github.ref_name }}' in envs:
            set_output('environment',envs.get('${{ github.ref_name }}'))
        shell: python         

      - name: Bump version and push tag
        if: steps.environment.outputs.is-deployable == 'True'
        id: tag_version
        uses: mathieudutour/github-tag-action@v6.1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          pre_release_branches: ${{ vars.VERSION_PRERELEASE_BRANCHES }}
          release_branches: ${{ vars.VERSION_RELEASE_BRANCHES }}
          tag_prefix: '${{ vars.PROJECT_NAME }}-v'
          append_to_pre_release_tag: 'prerelease'
